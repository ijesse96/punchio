name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run Flutter analyze
      run: flutter analyze
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Apple Developer Certificate
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Apply certificate to keychain
        security default-keychain -s $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
    - name: Setup Provisioning Profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        PROVISIONING_PROFILE_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PROVISIONING_PROFILE_PATH
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PROVISIONING_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    - name: Configure Xcode Project
      run: |
        # Set the development team ID in the Xcode project
        sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = MNR5F55U3;/g' ios/Runner.xcodeproj/project.pbxproj
        sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = MNR5F55U3;/g' ios/Runner.xcodeproj/project.pbxproj
        # Also try without quotes
        sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = MNR5F55U3;/g' ios/Runner.xcodeproj/project.pbxproj
        # Set code sign identity
        sed -i '' 's/CODE_SIGN_IDENTITY = "";/CODE_SIGN_IDENTITY = "iPhone Developer";/g' ios/Runner.xcodeproj/project.pbxproj
        # Set provisioning profile
        sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = "";/PROVISIONING_PROFILE_SPECIFIER = "punchio Development";/g' ios/Runner.xcodeproj/project.pbxproj
        
    - name: Build iOS App
      run: |
        flutter build ipa --release \
          --build-name=1.0.${{ github.run_number }} \
          --build-number=${{ github.run_number }} \
          --export-method=development \
          --ios-build-arg="DEVELOPMENT_TEAM=MNR5F55U3" \
          --ios-build-arg="CODE_SIGN_IDENTITY=iPhone Developer" \
          --ios-build-arg="PROVISIONING_PROFILE_SPECIFIER=punchio Development"
          
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: build/ios/ipa/*.ipa