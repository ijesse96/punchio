name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run Flutter analyze
      run: flutter analyze
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Apple Developer Certificate
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Apply certificate to keychain
        security default-keychain -s $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
    - name: Setup Provisioning Profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        PROVISIONING_PROFILE_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PROVISIONING_PROFILE_PATH
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PROVISIONING_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    - name: Configure Xcode Project
      run: |
        # Use Python to modify the Xcode project file
        python3 << 'EOF'
        import re
        
        # Read the project file
        with open('ios/Runner.xcodeproj/project.pbxproj', 'r') as f:
            content = f.read()
        
        # Replace DEVELOPMENT_TEAM empty values
        content = re.sub(r'DEVELOPMENT_TEAM = "";', 'DEVELOPMENT_TEAM = MNR5F55U3;', content)
        content = re.sub(r'DEVELOPMENT_TEAM = "";', 'DEVELOPMENT_TEAM = MNR5F55U3;', content)
        
        # Set code signing style
        content = re.sub(r'CODE_SIGN_STYLE = Manual;', 'CODE_SIGN_STYLE = Automatic;', content)
        
        # Set provisioning profile
        content = re.sub(r'PROVISIONING_PROFILE_SPECIFIER = "";', 'PROVISIONING_PROFILE_SPECIFIER = "punchio Development";', content)
        
        # Write back the modified content
        with open('ios/Runner.xcodeproj/project.pbxproj', 'w') as f:
            f.write(content)
        
        print("Xcode project file updated successfully")
        EOF
        
        # Show what we changed
        grep -n "DEVELOPMENT_TEAM" ios/Runner.xcodeproj/project.pbxproj || echo "No DEVELOPMENT_TEAM found"
        
    - name: Build iOS App
      env:
        DEVELOPER_TEAM: MNR5F55U3
        CODE_SIGN_IDENTITY: "iPhone Developer"
        PROVISIONING_PROFILE_SPECIFIER: "punchio Development"
      run: |
        flutter build ipa --release \
          --build-name=1.0.${{ github.run_number }} \
          --build-number=${{ github.run_number }} \
          --export-method=development
          
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: build/ios/ipa/*.ipa