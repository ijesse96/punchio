name: iOS Clean Build

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup iOS build environment
      run: |
        # Install CocoaPods
        sudo gem install cocoapods --quiet
        
        # Navigate to iOS directory and install pods
        cd ios
        pod install
        cd ..
        
    - name: Verify GitHub Secrets
      run: |
        echo "🔍 Verifying GitHub secrets..."
        echo "TEAM_ID secret exists: ${{ secrets.TEAM_ID != '' }}"
        echo "APPLE_ID secret exists: ${{ secrets.APPLE_ID != '' }}"
        echo "APPLE_PASSWORD secret exists: ${{ secrets.APPLE_PASSWORD != '' }}"
        
        if [ -z "${{ secrets.TEAM_ID }}" ]; then
          echo "❌ ERROR: TEAM_ID secret is not set!"
          exit 1
        fi
        if [ -z "${{ secrets.APPLE_ID }}" ]; then
          echo "❌ ERROR: APPLE_ID secret is not set!"
          exit 1
        fi
        if [ -z "${{ secrets.APPLE_PASSWORD }}" ]; then
          echo "❌ ERROR: APPLE_PASSWORD secret is not set!"
          exit 1
        fi
        
        echo "✅ All required secrets are available"
        
    - name: Setup Code Signing
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🔐 Setting up code signing..."
        
        # Create keychain for code signing
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Set keychain search list
        security list-keychains -d user -s build.keychain
        
        echo "✅ Code signing setup completed"
        
    - name: Authenticate with Apple
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🍎 Authenticating with Apple Developer Portal..."
        
        # Create a temporary keychain for authentication
        security create-keychain -p "" temp.keychain
        security default-keychain -s temp.keychain
        security unlock-keychain -p "" temp.keychain
        security set-keychain-settings -t 3600 -u temp.keychain
        
        # Authenticate with Apple using xcrun altool
        echo "🔑 Authenticating with Apple ID: $APPLE_ID"
        xcrun altool --list-providers \
          --username "$APPLE_ID" \
          --password "$APPLE_PASSWORD" \
          --team-id "$TEAM_ID" || {
            echo "❌ Apple authentication failed!"
            echo "Please check your Apple ID and app-specific password"
            exit 1
          }
        
        echo "✅ Apple authentication successful!"
        
        # Clean up temporary keychain
        security delete-keychain temp.keychain
        
    - name: Debug iOS Project
      run: |
        echo "🔍 Debugging iOS project configuration..."
        echo "📋 iOS project structure:"
        ls -la ios/
        echo ""
        echo "📋 Xcode project settings:"
        grep -n "DEVELOPMENT_TEAM\|PRODUCT_BUNDLE_IDENTIFIER\|CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj | head -10
        echo ""
        echo "📋 Export options:"
        cat ios/ExportOptions.plist
        echo ""
        echo "📋 Podfile:"
        head -20 ios/Podfile
        
    - name: Build iOS App with Flutter
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🚀 Building iOS app with Flutter (bypassing xcodebuild export issues)..."
        
        # Use Flutter's built-in IPA generation which handles authentication better
        echo "📱 Starting Flutter build..."
        flutter build ipa \
          --release \
          --export-options-plist=ios/ExportOptions.plist \
          --build-name=1.0.0 \
          --build-number=1 2>&1 | tee flutter_build.log
        
        # Check if build succeeded
        if [ ! -d "build/ios/ipa" ] || [ ! -f "build/ios/ipa"/*.ipa ]; then
          echo "❌ Flutter build failed! No IPA file created."
          echo "📋 Key errors from Flutter build log:"
          grep -i "error\|failed" flutter_build.log | head -20
          echo ""
          echo "📋 Last 50 lines of Flutter build log:"
          tail -50 flutter_build.log
          exit 1
        fi
        
        echo "✅ Flutter build completed successfully!"
        
        # List the generated IPA file
        echo "📱 Generated IPA file:"
        ls -la build/ios/ipa/*.ipa
        
    - name: Upload IPA file
      uses: actions/upload-artifact@v4
      with:
        name: punchio-ipa
        path: build/ios/ipa/*.ipa
        retention-days: 30
        
    - name: Debug on failure
      if: failure()
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🔍 Debug information:"
        echo "📋 Flutter doctor:"
        flutter doctor -v
        echo ""
        echo "📋 iOS project structure:"
        ls -la ios/
        echo ""
        echo "📋 Xcode project settings:"
        grep -n "DEVELOPMENT_TEAM\|PRODUCT_BUNDLE_IDENTIFIER\|CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj | head -10
        echo ""
        echo "📋 Export options:"
        cat ios/ExportOptions.plist
        echo ""
        echo "📋 Environment variables:"
        echo "TEAM_ID: ${TEAM_ID:-'NOT SET'}"
        echo "APPLE_ID: ${APPLE_ID:-'NOT SET'}"
        echo "APPLE_PASSWORD: ${APPLE_PASSWORD:+'SET'}"
        echo ""
        echo "📋 GitHub Secrets Status:"
        echo "TEAM_ID secret exists: ${{ secrets.TEAM_ID != '' }}"
        echo "APPLE_ID secret exists: ${{ secrets.APPLE_ID != '' }}"
        echo "APPLE_PASSWORD secret exists: ${{ secrets.APPLE_PASSWORD != '' }}"
