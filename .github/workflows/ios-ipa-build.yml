name: iOS IPA Build

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  build-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup iOS build environment
      run: |
        # Install CocoaPods
        sudo gem install cocoapods --quiet
        
        # Navigate to iOS directory and install pods
        cd ios
        pod install
        cd ..
        
    - name: Setup Apple Developer Environment
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🔍 Setting up Apple Developer environment..."
        
        # Verify secrets are available
        if [ -z "$TEAM_ID" ]; then
          echo "❌ ERROR: TEAM_ID secret is not set!"
          echo "Please add TEAM_ID secret to your repository settings"
          exit 1
        fi
        if [ -z "$APPLE_ID" ]; then
          echo "❌ ERROR: APPLE_ID secret is not set!"
          echo "Please add APPLE_ID secret to your repository settings"
          exit 1
        fi
        if [ -z "$APPLE_PASSWORD" ]; then
          echo "❌ ERROR: APPLE_PASSWORD secret is not set!"
          echo "Please add APPLE_PASSWORD secret to your repository settings"
          exit 1
        fi
        
        echo "✅ All required secrets are available"
        echo "📋 Configuration:"
        echo "   - Team ID: $TEAM_ID"
        echo "   - Bundle ID: com.punchio.punchio"
        echo "   - Apple ID: $APPLE_ID"
        
    - name: Build iOS IPA
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "🚀 Building iOS IPA..."
        
        # Build iOS app using xcodebuild with automatic code signing
        cd ios
        
        # Clean previous builds
        rm -rf build/
        
        # Build the app with automatic code signing
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath build/Runner.xcarchive \
          CODE_SIGN_IDENTITY="Apple Development" \
          CODE_SIGNING_REQUIRED=YES \
          CODE_SIGNING_ALLOWED=YES \
          DEVELOPMENT_TEAM="$TEAM_ID" \
          PRODUCT_BUNDLE_IDENTIFIER=com.punchio.punchio \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          archive 2>&1 | tee xcodebuild.log || {
            echo "❌ Xcode build failed! Key errors:"
            grep -i "error\|failed" xcodebuild.log | head -20
            echo ""
            echo "📋 Full xcodebuild log:"
            cat xcodebuild.log
            exit 1
          }
          
        echo "✅ Xcode build completed successfully!"
        
        # Export IPA
        echo "🚀 Exporting IPA..."
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build/ipa \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration 2>&1 | tee export.log || {
            echo "❌ IPA export failed! Key errors:"
            grep -i "error\|failed" export.log | head -20
            echo ""
            echo "📋 Full export log:"
            cat export.log
            exit 1
          }
          
        echo "✅ IPA export completed successfully!"
        
        # List the generated IPA file
        echo "📱 Generated IPA file:"
        ls -la build/ipa/*.ipa
        
        cd ..
        
    - name: Upload IPA file
      uses: actions/upload-artifact@v4
      with:
        name: punchio-ipa
        path: ios/build/ipa/*.ipa
        retention-days: 30
        
    - name: Debug on failure
      if: failure()
      run: |
        echo "🔍 Debug information:"
        echo "📋 Flutter doctor:"
        flutter doctor -v
        echo ""
        echo "📋 iOS project structure:"
        ls -la ios/
        echo ""
        echo "📋 Xcode project settings:"
        grep -n "DEVELOPMENT_TEAM\|PRODUCT_BUNDLE_IDENTIFIER\|CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj | head -10
        echo ""
        echo "📋 Export options:"
        cat ios/ExportOptions.plist
        echo ""
        echo "📋 Environment variables:"
        echo "TEAM_ID: ${TEAM_ID:-'NOT SET'}"
        echo "APPLE_ID: ${APPLE_ID:-'NOT SET'}"
        echo "APPLE_PASSWORD: ${APPLE_PASSWORD:+'SET'}"
