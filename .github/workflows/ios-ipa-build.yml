name: iOS IPA Build

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  build-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup iOS build environment
      run: |
        # Install CocoaPods
        sudo gem install cocoapods --quiet
        
        # Navigate to iOS directory and install pods
        cd ios
        pod install
        cd ..
        
    - name: Verify GitHub Secrets
      run: |
        echo "üîç Verifying GitHub secrets..."
        echo "TEAM_ID secret exists: ${{ secrets.TEAM_ID != '' }}"
        echo "APPLE_ID secret exists: ${{ secrets.APPLE_ID != '' }}"
        echo "APPLE_PASSWORD secret exists: ${{ secrets.APPLE_PASSWORD != '' }}"
        
        if [ -z "${{ secrets.TEAM_ID }}" ]; then
          echo "‚ùå ERROR: TEAM_ID secret is not set!"
          echo "Please add TEAM_ID secret to your repository settings"
          exit 1
        fi
        if [ -z "${{ secrets.APPLE_ID }}" ]; then
          echo "‚ùå ERROR: APPLE_ID secret is not set!"
          echo "Please add APPLE_ID secret to your repository settings"
          exit 1
        fi
        if [ -z "${{ secrets.APPLE_PASSWORD }}" ]; then
          echo "‚ùå ERROR: APPLE_PASSWORD secret is not set!"
          echo "Please add APPLE_PASSWORD secret to your repository settings"
          exit 1
        fi
        
        echo "‚úÖ All required secrets are available"
        
    - name: Setup Apple Developer Environment
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "üîç Setting up Apple Developer environment..."
        echo "üìã Configuration:"
        echo "   - Team ID: $TEAM_ID"
        echo "   - Bundle ID: com.punchio.punchio"
        echo "   - Apple ID: $APPLE_ID"
        
    - name: Build iOS App for TestFlight
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "üöÄ Building iOS app for TestFlight distribution..."
        
        # Use Flutter build with automatic provisioning for app-store
        flutter build ipa \
          --release \
          --export-options-plist=ios/ExportOptions.plist \
          --build-name=1.0.0 \
          --build-number=1 2>&1 | tee flutter_build.log || {
            echo "‚ùå Flutter build failed! Key errors:"
            grep -i "error\|failed" flutter_build.log | head -20
            echo ""
            echo "üìã Full Flutter build log:"
            cat flutter_build.log
            exit 1
          }
          
        echo "‚úÖ Flutter build completed successfully!"
        
        # List the generated IPA file
        echo "üì± Generated IPA file for TestFlight:"
        ls -la build/ios/ipa/*.ipa
        
    - name: Upload to TestFlight
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "üöÄ Uploading to TestFlight..."
        
        # Upload to TestFlight using xcrun altool
        xcrun altool --upload-app \
          --type ios \
          --file build/ios/ipa/*.ipa \
          --username "$APPLE_ID" \
          --password "$APPLE_PASSWORD" \
          --team-id "$TEAM_ID" 2>&1 | tee testflight_upload.log || {
            echo "‚ùå TestFlight upload failed! Key errors:"
            grep -i "error\|failed" testflight_upload.log | head -20
            echo ""
            echo "üìã Full TestFlight upload log:"
            cat testflight_upload.log
            echo ""
            echo "‚ö†Ô∏è Upload failed, but IPA file was still generated"
            echo "You can manually upload the IPA file to TestFlight"
            exit 1
          }
          
        echo "‚úÖ Successfully uploaded to TestFlight!"
        echo "üì± Your app is now available in TestFlight for testing"
        
    - name: Upload IPA file as backup
      uses: actions/upload-artifact@v4
      with:
        name: punchio-testflight-ipa
        path: build/ios/ipa/*.ipa
        retention-days: 30
        
    - name: Debug on failure
      if: failure()
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      run: |
        echo "üîç Debug information:"
        echo "üìã Flutter doctor:"
        flutter doctor -v
        echo ""
        echo "üìã iOS project structure:"
        ls -la ios/
        echo ""
        echo "üìã Xcode project settings:"
        grep -n "DEVELOPMENT_TEAM\|PRODUCT_BUNDLE_IDENTIFIER\|CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj | head -10
        echo ""
        echo "üìã Export options:"
        cat ios/ExportOptions.plist
        echo ""
        echo "üìã Environment variables:"
        echo "TEAM_ID: ${TEAM_ID:-'NOT SET'}"
        echo "APPLE_ID: ${APPLE_ID:-'NOT SET'}"
        echo "APPLE_PASSWORD: ${APPLE_PASSWORD:+'SET'}"
        echo ""
        echo "üìã GitHub Secrets Status:"
        echo "TEAM_ID secret exists: ${{ secrets.TEAM_ID != '' }}"
        echo "APPLE_ID secret exists: ${{ secrets.APPLE_ID != '' }}"
        echo "APPLE_PASSWORD secret exists: ${{ secrets.APPLE_PASSWORD != '' }}"
